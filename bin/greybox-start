#!/opt/core/venv/bin/python3

from pathlib import Path

import grpc
from core.api.grpc.client import CoreGrpcClient
from core.api.grpc.wrappers import SessionState
from core.scripts.cli import coreclient


session_id_path = Path("/run/greybox.sid")
map_path = Path("/etc/greybox/map.xml")

@coreclient
def get_session(core: CoreGrpcClient):
    if session_id_path.exists():
        try:
            existing_id = int(session_id_path.read_text()) 
        except ValueError:
            # Invalid value found, file will get overwritten below
            existing_id = None

        # If existing ID found, check if it's still valid
        if existing_id:
            try:
                return core.get_session(existing_id)
            except grpc.RpcError as e:
                print(f"grpc error: {e.details()}")
                session_id_path.unlink()
    return None


@coreclient
def main(core: CoreGrpcClient) -> int:
    if session:= get_session():
        if session.state == SessionState.RUNTIME:
            print(f"Session already running with id {session.id}")
            exit(0)
        else:
            result = core.start_session(session.id)
            if result:
                print(f"Session with ID {session.id} found and started.")
                exit(0)
    
    try:
        result, session_id = core.open_xml(map_path, start=True)
    except grpc.RpcError as e:
        exit(f"grpc error: {e.details()}")

    if session_id:    
        session_id_path.write_text(f"{session_id}\n")
        print(f"Started session with ID {session_id}")
        exit(0)
    else:
        # In case execution gets here
        exit("Failed to start session, but no error returned, try running manually")


if __name__ == "__main__":
    main()